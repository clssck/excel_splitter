name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: # Allow manual triggering from GitHub Actions UI
  # Trigger release workflow on new tags
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        node-version: ["20.x", "22.x"]

    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Setup Node.js with dependency caching
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      # Optional: Cache Electron binaries for faster builds
      - name: Cache Electron binaries
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}

      # Install dependencies
      - run: npm ci

      # Build Electron app
      - run: npm run build --if-present

      # Upload built installers as artifacts for release job
      - name: Upload installers
        uses: actions/upload-artifact@v4
        with:
          name: installers-${{ matrix.os }}-${{ matrix.node-version }}
          path: |
            dist/**/*.exe
            dist/**/*.dmg
            dist/**/*.AppImage
            dist/**/*.zip

      # Run tests
      - run: npm test

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create GitHub Release and Upload Installers
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/**/*.exe,dist/**/*.dmg,dist/**/*.AppImage,dist/**/*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: auto-release-${{ github.run_number }}
          name: "Automated Release ${{ github.run_number }}"
          body: "Automated release of Electron installers for commit ${{ github.sha }}."
          draft: false
          prerelease: false
