{
  "name": "excel-project-batch-splitter",
  "version": "1.0.0",
  "description": "Electron app to split Excel files by project_code and batch_code with GUI file/directory selection.",
  "main": "main.js",
  "scripts": {
    "start": "electron .",
    "dev": "npm start",
    "prebuild": "taskkill /f /im electron.exe /t || exit 0",
    "clean": "rimraf dist",
    "build": "electron-builder --windows",
    "dist": "npm run clean && npm run build",
    "postinstall": "electron-builder install-app-deps",
    "test": "echo \"No tests specified\" && exit 0"
  },
  "dependencies": {
    "xlsx": "^0.18.5",
    "exceljs": "^4.4.0"
  },
  "devDependencies": {
    "electron": "^35.2.0",
    "electron-builder": "^26.0.12",
    "husky": "^9.1.7",
    "lint-staged": "^15.5.1",
    "rimraf": "^5.0.5"
  },
  "build": {
    "appId": "com.example.excelprojectbatchsplitter",
    "productName": "ExcelProjectBatchSplitter",
    "fileAssociations": [
      {
        "ext": "xlsx",
        "name": "Excel File",
        "role": "Editor"
      }
    ],
    "files": [
      "**/*",
      "!node_modules/{@types*,*.d.ts}"
    ],
    "directories": {
      "buildResources": "build"
    },
    "win": {
      "target": "nsis",
      "icon": "build/icon.ico"
    },
    "extraFiles": [
      {
        "from": "node_modules/electron/dist/ffmpeg.dll",
        "to": "ffmpeg.dll"
      },
      {
        "from": "node_modules/electron/dist/icudtl.dat",
        "to": "icudtl.dat"
      }
    ],
    "mac": {
      "target": [
        "dmg"
      ],
      "icon": "build/icon.icns",
      "extraFiles": [
        {
          "from": "node_modules/electron/dist/icudtl.dat",
          "to": "icudtl.dat"
        }
      ]
    },
    "linux": {
      "target": [
        "AppImage"
      ],
      "icon": "build/icon.png"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "artifactName": "${productName}-${version}-setup.${ext}",
      "include": "installer.nsh"
    },
    "publish": null
  },
  "author": "",
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }
}
